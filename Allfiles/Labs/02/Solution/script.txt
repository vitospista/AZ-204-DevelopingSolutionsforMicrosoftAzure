#change to free sandbox
az login
az account set -s "74910ed8-22d4-4e40-9f22-ac5d5b3ffb34"

#get a resource group
$rg=(az group list --query "[].name" --output tsv)

#set defaults
az configure --defaults location=westeurope group=$rg

#create a storage account
$storage="funcstoristvan"
az storage account create -n $storage --sku "Standard_LRS"

#create a Functions app
$func="funclogicistvan"
az functionapp create -g $rg --consumption-plan-location westeurope -n $func -s $storage --functions-version 3

#create a function that's triggered by an HTTP request
#Task 1: Create an HTTP-triggered function
func init
func new

#Task 2: Write function code
1.	Select the Code + Test option from the Developer section.
2.	In the function editor, delete the example code in the run.csx function script.
3.	Add the following using directives for libraries that will be referenced by the application:
 	using Microsoft.AspNetCore.Mvc;
    using System.Net;
4.	Create a new public static method named Run that returns a variable of type IActionResult and that also takes in variables of type HttpRequest and ILogger as parameters named req and log:
 	public static IActionResult Run(HttpRequest req, ILogger log)
5.	Within the Run method, log a fixed message:
 	log.LogInformation("Received a request");
6.	Finally, echo the body of the HTTP request as the HTTP response:
 	return new OkObjectResult(req.Body);
7.	Save the updated function code.

#Task 3: Test function run in the portal
func start

#create a function that triggers on a schedule
Task 1: Create a schedule-triggered function
func new

1.	Access the funclogic[yourname] function app that you created earlier in this lab.
2.	Create a new function by using the following settings:
–	Template: Timer trigger
–	Name: Recurring
–	Schedule: 0 */2 * * * *


#create a function that integrates with other services
Task 1: Create an HTTP-triggered function
func new
1.	Access the funclogic[yourname] function app that you created earlier in this lab.
2.	Create a new function by using the following settings:
–	Template: HTTP trigger
–	Name: GetSettingInfo
–	Authorization level: Anonymous

#Task 2: Upload sample content to a container
az storage container create -n content --account-name $storage --account-key $key
az storage blob upload -f "C:\Users\vitos\Desktop\Work\Azure Course\Labs\02\Starter\settings.json" -c content -n settings --account-name $storage
--account-key $key

Task 3: Configure an HTTP-triggered function
dotnet add package Microsoft.Azure.WebJobs.Extensions.Storage --version 4.0.2

#publish to azure
func azure functionapp publish $func
